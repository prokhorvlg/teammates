// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<App> renders a snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MockedProvider
    addTypename={true}
    mocks={
      Array [
        Object {
          "request": Object {
            "query": Object {
              "definitions": Array [
                Object {
                  "directives": Array [],
                  "kind": "OperationDefinition",
                  "name": Object {
                    "kind": "Name",
                    "value": "GetEmployees",
                  },
                  "operation": "query",
                  "selectionSet": Object {
                    "kind": "SelectionSet",
                    "selections": Array [
                      Object {
                        "alias": undefined,
                        "arguments": Array [],
                        "directives": Array [],
                        "kind": "Field",
                        "name": Object {
                          "kind": "Name",
                          "value": "people",
                        },
                        "selectionSet": Object {
                          "kind": "SelectionSet",
                          "selections": Array [
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "id",
                              },
                              "selectionSet": undefined,
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "name",
                              },
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "title",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "first",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "last",
                                    },
                                    "selectionSet": undefined,
                                  },
                                ],
                              },
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "email",
                              },
                              "selectionSet": undefined,
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "picture",
                              },
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "thumbnail",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "medium",
                                    },
                                    "selectionSet": undefined,
                                  },
                                ],
                              },
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "phone",
                              },
                              "selectionSet": undefined,
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "cell",
                              },
                              "selectionSet": undefined,
                            },
                          ],
                        },
                      },
                    ],
                  },
                  "variableDefinitions": Array [],
                },
              ],
              "kind": "Document",
              "loc": Object {
                "end": 212,
                "start": 0,
              },
            },
          },
          "result": Object {
            "data": Object {
              "people": Array [
                Object {
                  "__typename": "Person",
                  "cell": "0176-8113486",
                  "email": "Heidelinde3e",
                  "id": "0",
                  "name": Object {
                    "__typename": "Name",
                    "first": "12h23!crazywefwfe",
                    "last": "Heidelinde3e",
                    "title": "Ms",
                  },
                  "phone": "0081-3231613",
                  "picture": Object {
                    "__typename": "Picture",
                    "medium": "https://randomuser.me/api/portraits/med/women/14.jpg",
                    "thumbnail": "https://randomuser.me/api/portraits/thumb/women/14.jpg",
                  },
                },
                Object {
                  "__typename": "Person",
                  "cell": "(639)-154-1675",
                  "email": "jill.bradley@example.com",
                  "id": "98",
                  "name": Object {
                    "__typename": "Name",
                    "first": "Jill",
                    "last": "Bradley",
                    "title": "Ms",
                  },
                  "phone": "(914)-769-6131",
                  "picture": Object {
                    "__typename": "Picture",
                    "medium": "https://randomuser.me/api/portraits/med/women/64.jpg",
                    "thumbnail": "https://randomuser.me/api/portraits/thumb/women/64.jpg",
                  },
                },
                Object {
                  "__typename": "Person",
                  "cell": "081-599-2437",
                  "email": "eleanor.henry@example.com",
                  "id": "99",
                  "name": Object {
                    "__typename": "Name",
                    "first": "Eleanor",
                    "last": "Henry",
                    "title": "Ms",
                  },
                  "phone": "031-263-1441",
                  "picture": Object {
                    "__typename": "Picture",
                    "medium": "https://randomuser.me/api/portraits/med/women/47.jpg",
                    "thumbnail": "https://randomuser.me/api/portraits/thumb/women/47.jpg",
                  },
                },
              ],
            },
            "error": null,
            "loading": false,
          },
        },
      ]
    }
  >
    <App />
  </MockedProvider>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <App />,
      "client": ApolloClient {
        "cache": InMemoryCache {
          "addTypename": true,
          "config": Object {
            "addTypename": true,
            "dataIdFromObject": [Function],
            "resultCaching": true,
            "typePolicies": Object {},
          },
          "data": Root {
            "canRead": [Function],
            "data": Object {},
            "getFieldValue": [Function],
            "group": CacheGroup {
              "caching": true,
              "d": [Function],
              "keyMaker": Trie {
                "makeData": [Function],
                "weakness": true,
              },
            },
            "policies": Policies {
              "cache": [Circular],
              "config": Object {
                "cache": [Circular],
                "dataIdFromObject": [Function],
                "possibleTypes": undefined,
                "typePolicies": Object {},
              },
              "fuzzySubtypes": Map {},
              "rootIdsByTypename": Object {
                "Mutation": "ROOT_MUTATION",
                "Query": "ROOT_QUERY",
                "Subscription": "ROOT_SUBSCRIPTION",
              },
              "rootTypenamesById": Object {
                "ROOT_MUTATION": "Mutation",
                "ROOT_QUERY": "Query",
                "ROOT_SUBSCRIPTION": "Subscription",
              },
              "supertypeMap": Map {},
              "toBeAdded": Object {},
              "typePolicies": Object {},
              "usingPossibleTypes": false,
            },
            "refs": Object {},
            "rootIds": Object {},
            "sharedLayerGroup": CacheGroup {
              "caching": true,
              "d": [Function],
              "keyMaker": Trie {
                "makeData": [Function],
                "weakness": true,
              },
            },
            "storageTrie": Trie {
              "makeData": [Function],
              "weakness": true,
            },
            "toReference": [Function],
          },
          "getFragmentDoc": [Function],
          "makeVar": [Function],
          "maybeBroadcastWatch": [Function],
          "optimisticData": Root {
            "canRead": [Function],
            "data": Object {},
            "getFieldValue": [Function],
            "group": CacheGroup {
              "caching": true,
              "d": [Function],
              "keyMaker": Trie {
                "makeData": [Function],
                "weakness": true,
              },
            },
            "policies": Policies {
              "cache": [Circular],
              "config": Object {
                "cache": [Circular],
                "dataIdFromObject": [Function],
                "possibleTypes": undefined,
                "typePolicies": Object {},
              },
              "fuzzySubtypes": Map {},
              "rootIdsByTypename": Object {
                "Mutation": "ROOT_MUTATION",
                "Query": "ROOT_QUERY",
                "Subscription": "ROOT_SUBSCRIPTION",
              },
              "rootTypenamesById": Object {
                "ROOT_MUTATION": "Mutation",
                "ROOT_QUERY": "Query",
                "ROOT_SUBSCRIPTION": "Subscription",
              },
              "supertypeMap": Map {},
              "toBeAdded": Object {},
              "typePolicies": Object {},
              "usingPossibleTypes": false,
            },
            "refs": Object {},
            "rootIds": Object {},
            "sharedLayerGroup": CacheGroup {
              "caching": true,
              "d": [Function],
              "keyMaker": Trie {
                "makeData": [Function],
                "weakness": true,
              },
            },
            "storageTrie": Trie {
              "makeData": [Function],
              "weakness": true,
            },
            "toReference": [Function],
          },
          "policies": Policies {
            "cache": [Circular],
            "config": Object {
              "cache": [Circular],
              "dataIdFromObject": [Function],
              "possibleTypes": undefined,
              "typePolicies": Object {},
            },
            "fuzzySubtypes": Map {},
            "rootIdsByTypename": Object {
              "Mutation": "ROOT_MUTATION",
              "Query": "ROOT_QUERY",
              "Subscription": "ROOT_SUBSCRIPTION",
            },
            "rootTypenamesById": Object {
              "ROOT_MUTATION": "Mutation",
              "ROOT_QUERY": "Query",
              "ROOT_SUBSCRIPTION": "Subscription",
            },
            "supertypeMap": Map {},
            "toBeAdded": Object {},
            "typePolicies": Object {},
            "usingPossibleTypes": false,
          },
          "storeReader": StoreReader {
            "config": Object {
              "addTypename": true,
              "cache": [Circular],
            },
            "executeSelectionSet": [Function],
            "executeSubSelectedArray": [Function],
            "knownResults": WeakMap {},
          },
          "storeWriter": StoreWriter {
            "cache": [Circular],
            "reader": StoreReader {
              "config": Object {
                "addTypename": true,
                "cache": [Circular],
              },
              "executeSelectionSet": [Function],
              "executeSubSelectedArray": [Function],
              "knownResults": WeakMap {},
            },
          },
          "txCount": 0,
          "typenameDocumentCache": Map {},
          "watchDep": [Function],
          "watches": Set {},
        },
        "clearStoreCallbacks": Array [],
        "defaultOptions": Object {},
        "disableNetworkFetches": false,
        "link": MockLink {
          "addTypename": true,
          "mockedResponsesByKey": Object {
            "{\\"query\\":\\"query GetEmployees {\\\\n  people {\\\\n    id\\\\n    name {\\\\n      title\\\\n      first\\\\n      last\\\\n      __typename\\\\n    }\\\\n    email\\\\n    picture {\\\\n      thumbnail\\\\n      medium\\\\n      __typename\\\\n    }\\\\n    phone\\\\n    cell\\\\n    __typename\\\\n  }\\\\n}\\\\n\\"}": Array [
              Object {
                "request": Object {
                  "query": Object {
                    "definitions": Array [
                      Object {
                        "directives": Array [],
                        "kind": "OperationDefinition",
                        "name": Object {
                          "kind": "Name",
                          "value": "GetEmployees",
                        },
                        "operation": "query",
                        "selectionSet": Object {
                          "kind": "SelectionSet",
                          "selections": Array [
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "people",
                              },
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "id",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "name",
                                    },
                                    "selectionSet": Object {
                                      "kind": "SelectionSet",
                                      "selections": Array [
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "title",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "first",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "last",
                                          },
                                          "selectionSet": undefined,
                                        },
                                      ],
                                    },
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "email",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "picture",
                                    },
                                    "selectionSet": Object {
                                      "kind": "SelectionSet",
                                      "selections": Array [
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "thumbnail",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "medium",
                                          },
                                          "selectionSet": undefined,
                                        },
                                      ],
                                    },
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "phone",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "cell",
                                    },
                                    "selectionSet": undefined,
                                  },
                                ],
                              },
                            },
                          ],
                        },
                        "variableDefinitions": Array [],
                      },
                    ],
                    "kind": "Document",
                    "loc": Object {
                      "end": 212,
                      "start": 0,
                    },
                  },
                },
                "result": Object {
                  "data": Object {
                    "people": Array [
                      Object {
                        "__typename": "Person",
                        "cell": "0176-8113486",
                        "email": "Heidelinde3e",
                        "id": "0",
                        "name": Object {
                          "__typename": "Name",
                          "first": "12h23!crazywefwfe",
                          "last": "Heidelinde3e",
                          "title": "Ms",
                        },
                        "phone": "0081-3231613",
                        "picture": Object {
                          "__typename": "Picture",
                          "medium": "https://randomuser.me/api/portraits/med/women/14.jpg",
                          "thumbnail": "https://randomuser.me/api/portraits/thumb/women/14.jpg",
                        },
                      },
                      Object {
                        "__typename": "Person",
                        "cell": "(639)-154-1675",
                        "email": "jill.bradley@example.com",
                        "id": "98",
                        "name": Object {
                          "__typename": "Name",
                          "first": "Jill",
                          "last": "Bradley",
                          "title": "Ms",
                        },
                        "phone": "(914)-769-6131",
                        "picture": Object {
                          "__typename": "Picture",
                          "medium": "https://randomuser.me/api/portraits/med/women/64.jpg",
                          "thumbnail": "https://randomuser.me/api/portraits/thumb/women/64.jpg",
                        },
                      },
                      Object {
                        "__typename": "Person",
                        "cell": "081-599-2437",
                        "email": "eleanor.henry@example.com",
                        "id": "99",
                        "name": Object {
                          "__typename": "Name",
                          "first": "Eleanor",
                          "last": "Henry",
                          "title": "Ms",
                        },
                        "phone": "031-263-1441",
                        "picture": Object {
                          "__typename": "Picture",
                          "medium": "https://randomuser.me/api/portraits/med/women/47.jpg",
                          "thumbnail": "https://randomuser.me/api/portraits/thumb/women/47.jpg",
                        },
                      },
                    ],
                  },
                  "error": null,
                  "loading": false,
                },
              },
            ],
          },
        },
        "localState": LocalState {
          "cache": InMemoryCache {
            "addTypename": true,
            "config": Object {
              "addTypename": true,
              "dataIdFromObject": [Function],
              "resultCaching": true,
              "typePolicies": Object {},
            },
            "data": Root {
              "canRead": [Function],
              "data": Object {},
              "getFieldValue": [Function],
              "group": CacheGroup {
                "caching": true,
                "d": [Function],
                "keyMaker": Trie {
                  "makeData": [Function],
                  "weakness": true,
                },
              },
              "policies": Policies {
                "cache": [Circular],
                "config": Object {
                  "cache": [Circular],
                  "dataIdFromObject": [Function],
                  "possibleTypes": undefined,
                  "typePolicies": Object {},
                },
                "fuzzySubtypes": Map {},
                "rootIdsByTypename": Object {
                  "Mutation": "ROOT_MUTATION",
                  "Query": "ROOT_QUERY",
                  "Subscription": "ROOT_SUBSCRIPTION",
                },
                "rootTypenamesById": Object {
                  "ROOT_MUTATION": "Mutation",
                  "ROOT_QUERY": "Query",
                  "ROOT_SUBSCRIPTION": "Subscription",
                },
                "supertypeMap": Map {},
                "toBeAdded": Object {},
                "typePolicies": Object {},
                "usingPossibleTypes": false,
              },
              "refs": Object {},
              "rootIds": Object {},
              "sharedLayerGroup": CacheGroup {
                "caching": true,
                "d": [Function],
                "keyMaker": Trie {
                  "makeData": [Function],
                  "weakness": true,
                },
              },
              "storageTrie": Trie {
                "makeData": [Function],
                "weakness": true,
              },
              "toReference": [Function],
            },
            "getFragmentDoc": [Function],
            "makeVar": [Function],
            "maybeBroadcastWatch": [Function],
            "optimisticData": Root {
              "canRead": [Function],
              "data": Object {},
              "getFieldValue": [Function],
              "group": CacheGroup {
                "caching": true,
                "d": [Function],
                "keyMaker": Trie {
                  "makeData": [Function],
                  "weakness": true,
                },
              },
              "policies": Policies {
                "cache": [Circular],
                "config": Object {
                  "cache": [Circular],
                  "dataIdFromObject": [Function],
                  "possibleTypes": undefined,
                  "typePolicies": Object {},
                },
                "fuzzySubtypes": Map {},
                "rootIdsByTypename": Object {
                  "Mutation": "ROOT_MUTATION",
                  "Query": "ROOT_QUERY",
                  "Subscription": "ROOT_SUBSCRIPTION",
                },
                "rootTypenamesById": Object {
                  "ROOT_MUTATION": "Mutation",
                  "ROOT_QUERY": "Query",
                  "ROOT_SUBSCRIPTION": "Subscription",
                },
                "supertypeMap": Map {},
                "toBeAdded": Object {},
                "typePolicies": Object {},
                "usingPossibleTypes": false,
              },
              "refs": Object {},
              "rootIds": Object {},
              "sharedLayerGroup": CacheGroup {
                "caching": true,
                "d": [Function],
                "keyMaker": Trie {
                  "makeData": [Function],
                  "weakness": true,
                },
              },
              "storageTrie": Trie {
                "makeData": [Function],
                "weakness": true,
              },
              "toReference": [Function],
            },
            "policies": Policies {
              "cache": [Circular],
              "config": Object {
                "cache": [Circular],
                "dataIdFromObject": [Function],
                "possibleTypes": undefined,
                "typePolicies": Object {},
              },
              "fuzzySubtypes": Map {},
              "rootIdsByTypename": Object {
                "Mutation": "ROOT_MUTATION",
                "Query": "ROOT_QUERY",
                "Subscription": "ROOT_SUBSCRIPTION",
              },
              "rootTypenamesById": Object {
                "ROOT_MUTATION": "Mutation",
                "ROOT_QUERY": "Query",
                "ROOT_SUBSCRIPTION": "Subscription",
              },
              "supertypeMap": Map {},
              "toBeAdded": Object {},
              "typePolicies": Object {},
              "usingPossibleTypes": false,
            },
            "storeReader": StoreReader {
              "config": Object {
                "addTypename": true,
                "cache": [Circular],
              },
              "executeSelectionSet": [Function],
              "executeSubSelectedArray": [Function],
              "knownResults": WeakMap {},
            },
            "storeWriter": StoreWriter {
              "cache": [Circular],
              "reader": StoreReader {
                "config": Object {
                  "addTypename": true,
                  "cache": [Circular],
                },
                "executeSelectionSet": [Function],
                "executeSubSelectedArray": [Function],
                "knownResults": WeakMap {},
              },
            },
            "txCount": 0,
            "typenameDocumentCache": Map {},
            "watchDep": [Function],
            "watches": Set {},
          },
          "client": [Circular],
        },
        "mutate": [Function],
        "query": [Function],
        "queryDeduplication": true,
        "queryManager": QueryManager {
          "assumeImmutableResults": false,
          "cache": InMemoryCache {
            "addTypename": true,
            "config": Object {
              "addTypename": true,
              "dataIdFromObject": [Function],
              "resultCaching": true,
              "typePolicies": Object {},
            },
            "data": Root {
              "canRead": [Function],
              "data": Object {},
              "getFieldValue": [Function],
              "group": CacheGroup {
                "caching": true,
                "d": [Function],
                "keyMaker": Trie {
                  "makeData": [Function],
                  "weakness": true,
                },
              },
              "policies": Policies {
                "cache": [Circular],
                "config": Object {
                  "cache": [Circular],
                  "dataIdFromObject": [Function],
                  "possibleTypes": undefined,
                  "typePolicies": Object {},
                },
                "fuzzySubtypes": Map {},
                "rootIdsByTypename": Object {
                  "Mutation": "ROOT_MUTATION",
                  "Query": "ROOT_QUERY",
                  "Subscription": "ROOT_SUBSCRIPTION",
                },
                "rootTypenamesById": Object {
                  "ROOT_MUTATION": "Mutation",
                  "ROOT_QUERY": "Query",
                  "ROOT_SUBSCRIPTION": "Subscription",
                },
                "supertypeMap": Map {},
                "toBeAdded": Object {},
                "typePolicies": Object {},
                "usingPossibleTypes": false,
              },
              "refs": Object {},
              "rootIds": Object {},
              "sharedLayerGroup": CacheGroup {
                "caching": true,
                "d": [Function],
                "keyMaker": Trie {
                  "makeData": [Function],
                  "weakness": true,
                },
              },
              "storageTrie": Trie {
                "makeData": [Function],
                "weakness": true,
              },
              "toReference": [Function],
            },
            "getFragmentDoc": [Function],
            "makeVar": [Function],
            "maybeBroadcastWatch": [Function],
            "optimisticData": Root {
              "canRead": [Function],
              "data": Object {},
              "getFieldValue": [Function],
              "group": CacheGroup {
                "caching": true,
                "d": [Function],
                "keyMaker": Trie {
                  "makeData": [Function],
                  "weakness": true,
                },
              },
              "policies": Policies {
                "cache": [Circular],
                "config": Object {
                  "cache": [Circular],
                  "dataIdFromObject": [Function],
                  "possibleTypes": undefined,
                  "typePolicies": Object {},
                },
                "fuzzySubtypes": Map {},
                "rootIdsByTypename": Object {
                  "Mutation": "ROOT_MUTATION",
                  "Query": "ROOT_QUERY",
                  "Subscription": "ROOT_SUBSCRIPTION",
                },
                "rootTypenamesById": Object {
                  "ROOT_MUTATION": "Mutation",
                  "ROOT_QUERY": "Query",
                  "ROOT_SUBSCRIPTION": "Subscription",
                },
                "supertypeMap": Map {},
                "toBeAdded": Object {},
                "typePolicies": Object {},
                "usingPossibleTypes": false,
              },
              "refs": Object {},
              "rootIds": Object {},
              "sharedLayerGroup": CacheGroup {
                "caching": true,
                "d": [Function],
                "keyMaker": Trie {
                  "makeData": [Function],
                  "weakness": true,
                },
              },
              "storageTrie": Trie {
                "makeData": [Function],
                "weakness": true,
              },
              "toReference": [Function],
            },
            "policies": Policies {
              "cache": [Circular],
              "config": Object {
                "cache": [Circular],
                "dataIdFromObject": [Function],
                "possibleTypes": undefined,
                "typePolicies": Object {},
              },
              "fuzzySubtypes": Map {},
              "rootIdsByTypename": Object {
                "Mutation": "ROOT_MUTATION",
                "Query": "ROOT_QUERY",
                "Subscription": "ROOT_SUBSCRIPTION",
              },
              "rootTypenamesById": Object {
                "ROOT_MUTATION": "Mutation",
                "ROOT_QUERY": "Query",
                "ROOT_SUBSCRIPTION": "Subscription",
              },
              "supertypeMap": Map {},
              "toBeAdded": Object {},
              "typePolicies": Object {},
              "usingPossibleTypes": false,
            },
            "storeReader": StoreReader {
              "config": Object {
                "addTypename": true,
                "cache": [Circular],
              },
              "executeSelectionSet": [Function],
              "executeSubSelectedArray": [Function],
              "knownResults": WeakMap {},
            },
            "storeWriter": StoreWriter {
              "cache": [Circular],
              "reader": StoreReader {
                "config": Object {
                  "addTypename": true,
                  "cache": [Circular],
                },
                "executeSelectionSet": [Function],
                "executeSubSelectedArray": [Function],
                "knownResults": WeakMap {},
              },
            },
            "txCount": 0,
            "typenameDocumentCache": Map {},
            "watchDep": [Function],
            "watches": Set {},
          },
          "clientAwareness": Object {
            "name": undefined,
            "version": undefined,
          },
          "fetchCancelFns": Map {},
          "inFlightLinkObservables": Map {},
          "link": MockLink {
            "addTypename": true,
            "mockedResponsesByKey": Object {
              "{\\"query\\":\\"query GetEmployees {\\\\n  people {\\\\n    id\\\\n    name {\\\\n      title\\\\n      first\\\\n      last\\\\n      __typename\\\\n    }\\\\n    email\\\\n    picture {\\\\n      thumbnail\\\\n      medium\\\\n      __typename\\\\n    }\\\\n    phone\\\\n    cell\\\\n    __typename\\\\n  }\\\\n}\\\\n\\"}": Array [
                Object {
                  "request": Object {
                    "query": Object {
                      "definitions": Array [
                        Object {
                          "directives": Array [],
                          "kind": "OperationDefinition",
                          "name": Object {
                            "kind": "Name",
                            "value": "GetEmployees",
                          },
                          "operation": "query",
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "people",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "id",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "name",
                                      },
                                      "selectionSet": Object {
                                        "kind": "SelectionSet",
                                        "selections": Array [
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "title",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "first",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "last",
                                            },
                                            "selectionSet": undefined,
                                          },
                                        ],
                                      },
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "email",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "picture",
                                      },
                                      "selectionSet": Object {
                                        "kind": "SelectionSet",
                                        "selections": Array [
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "thumbnail",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "medium",
                                            },
                                            "selectionSet": undefined,
                                          },
                                        ],
                                      },
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "phone",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "cell",
                                      },
                                      "selectionSet": undefined,
                                    },
                                  ],
                                },
                              },
                            ],
                          },
                          "variableDefinitions": Array [],
                        },
                      ],
                      "kind": "Document",
                      "loc": Object {
                        "end": 212,
                        "start": 0,
                      },
                    },
                  },
                  "result": Object {
                    "data": Object {
                      "people": Array [
                        Object {
                          "__typename": "Person",
                          "cell": "0176-8113486",
                          "email": "Heidelinde3e",
                          "id": "0",
                          "name": Object {
                            "__typename": "Name",
                            "first": "12h23!crazywefwfe",
                            "last": "Heidelinde3e",
                            "title": "Ms",
                          },
                          "phone": "0081-3231613",
                          "picture": Object {
                            "__typename": "Picture",
                            "medium": "https://randomuser.me/api/portraits/med/women/14.jpg",
                            "thumbnail": "https://randomuser.me/api/portraits/thumb/women/14.jpg",
                          },
                        },
                        Object {
                          "__typename": "Person",
                          "cell": "(639)-154-1675",
                          "email": "jill.bradley@example.com",
                          "id": "98",
                          "name": Object {
                            "__typename": "Name",
                            "first": "Jill",
                            "last": "Bradley",
                            "title": "Ms",
                          },
                          "phone": "(914)-769-6131",
                          "picture": Object {
                            "__typename": "Picture",
                            "medium": "https://randomuser.me/api/portraits/med/women/64.jpg",
                            "thumbnail": "https://randomuser.me/api/portraits/thumb/women/64.jpg",
                          },
                        },
                        Object {
                          "__typename": "Person",
                          "cell": "081-599-2437",
                          "email": "eleanor.henry@example.com",
                          "id": "99",
                          "name": Object {
                            "__typename": "Name",
                            "first": "Eleanor",
                            "last": "Henry",
                            "title": "Ms",
                          },
                          "phone": "031-263-1441",
                          "picture": Object {
                            "__typename": "Picture",
                            "medium": "https://randomuser.me/api/portraits/med/women/47.jpg",
                            "thumbnail": "https://randomuser.me/api/portraits/thumb/women/47.jpg",
                          },
                        },
                      ],
                    },
                    "error": null,
                    "loading": false,
                  },
                },
              ],
            },
          },
          "localState": LocalState {
            "cache": InMemoryCache {
              "addTypename": true,
              "config": Object {
                "addTypename": true,
                "dataIdFromObject": [Function],
                "resultCaching": true,
                "typePolicies": Object {},
              },
              "data": Root {
                "canRead": [Function],
                "data": Object {},
                "getFieldValue": [Function],
                "group": CacheGroup {
                  "caching": true,
                  "d": [Function],
                  "keyMaker": Trie {
                    "makeData": [Function],
                    "weakness": true,
                  },
                },
                "policies": Policies {
                  "cache": [Circular],
                  "config": Object {
                    "cache": [Circular],
                    "dataIdFromObject": [Function],
                    "possibleTypes": undefined,
                    "typePolicies": Object {},
                  },
                  "fuzzySubtypes": Map {},
                  "rootIdsByTypename": Object {
                    "Mutation": "ROOT_MUTATION",
                    "Query": "ROOT_QUERY",
                    "Subscription": "ROOT_SUBSCRIPTION",
                  },
                  "rootTypenamesById": Object {
                    "ROOT_MUTATION": "Mutation",
                    "ROOT_QUERY": "Query",
                    "ROOT_SUBSCRIPTION": "Subscription",
                  },
                  "supertypeMap": Map {},
                  "toBeAdded": Object {},
                  "typePolicies": Object {},
                  "usingPossibleTypes": false,
                },
                "refs": Object {},
                "rootIds": Object {},
                "sharedLayerGroup": CacheGroup {
                  "caching": true,
                  "d": [Function],
                  "keyMaker": Trie {
                    "makeData": [Function],
                    "weakness": true,
                  },
                },
                "storageTrie": Trie {
                  "makeData": [Function],
                  "weakness": true,
                },
                "toReference": [Function],
              },
              "getFragmentDoc": [Function],
              "makeVar": [Function],
              "maybeBroadcastWatch": [Function],
              "optimisticData": Root {
                "canRead": [Function],
                "data": Object {},
                "getFieldValue": [Function],
                "group": CacheGroup {
                  "caching": true,
                  "d": [Function],
                  "keyMaker": Trie {
                    "makeData": [Function],
                    "weakness": true,
                  },
                },
                "policies": Policies {
                  "cache": [Circular],
                  "config": Object {
                    "cache": [Circular],
                    "dataIdFromObject": [Function],
                    "possibleTypes": undefined,
                    "typePolicies": Object {},
                  },
                  "fuzzySubtypes": Map {},
                  "rootIdsByTypename": Object {
                    "Mutation": "ROOT_MUTATION",
                    "Query": "ROOT_QUERY",
                    "Subscription": "ROOT_SUBSCRIPTION",
                  },
                  "rootTypenamesById": Object {
                    "ROOT_MUTATION": "Mutation",
                    "ROOT_QUERY": "Query",
                    "ROOT_SUBSCRIPTION": "Subscription",
                  },
                  "supertypeMap": Map {},
                  "toBeAdded": Object {},
                  "typePolicies": Object {},
                  "usingPossibleTypes": false,
                },
                "refs": Object {},
                "rootIds": Object {},
                "sharedLayerGroup": CacheGroup {
                  "caching": true,
                  "d": [Function],
                  "keyMaker": Trie {
                    "makeData": [Function],
                    "weakness": true,
                  },
                },
                "storageTrie": Trie {
                  "makeData": [Function],
                  "weakness": true,
                },
                "toReference": [Function],
              },
              "policies": Policies {
                "cache": [Circular],
                "config": Object {
                  "cache": [Circular],
                  "dataIdFromObject": [Function],
                  "possibleTypes": undefined,
                  "typePolicies": Object {},
                },
                "fuzzySubtypes": Map {},
                "rootIdsByTypename": Object {
                  "Mutation": "ROOT_MUTATION",
                  "Query": "ROOT_QUERY",
                  "Subscription": "ROOT_SUBSCRIPTION",
                },
                "rootTypenamesById": Object {
                  "ROOT_MUTATION": "Mutation",
                  "ROOT_QUERY": "Query",
                  "ROOT_SUBSCRIPTION": "Subscription",
                },
                "supertypeMap": Map {},
                "toBeAdded": Object {},
                "typePolicies": Object {},
                "usingPossibleTypes": false,
              },
              "storeReader": StoreReader {
                "config": Object {
                  "addTypename": true,
                  "cache": [Circular],
                },
                "executeSelectionSet": [Function],
                "executeSubSelectedArray": [Function],
                "knownResults": WeakMap {},
              },
              "storeWriter": StoreWriter {
                "cache": [Circular],
                "reader": StoreReader {
                  "config": Object {
                    "addTypename": true,
                    "cache": [Circular],
                  },
                  "executeSelectionSet": [Function],
                  "executeSubSelectedArray": [Function],
                  "knownResults": WeakMap {},
                },
              },
              "txCount": 0,
              "typenameDocumentCache": Map {},
              "watchDep": [Function],
              "watches": Set {},
            },
            "client": [Circular],
          },
          "mutationIdCounter": 1,
          "mutationStore": Object {},
          "onBroadcast": [Function],
          "queries": Map {},
          "queryDeduplication": true,
          "queryIdCounter": 1,
          "requestIdCounter": 1,
          "ssrMode": false,
          "transformCache": WeakMap {},
        },
        "reFetchObservableQueries": [Function],
        "resetStore": [Function],
        "resetStoreCallbacks": Array [],
        "typeDefs": undefined,
        "version": "3.3.21",
        "watchQuery": [Function],
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {},
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <App />,
        "client": ApolloClient {
          "cache": InMemoryCache {
            "addTypename": true,
            "config": Object {
              "addTypename": true,
              "dataIdFromObject": [Function],
              "resultCaching": true,
              "typePolicies": Object {},
            },
            "data": Root {
              "canRead": [Function],
              "data": Object {},
              "getFieldValue": [Function],
              "group": CacheGroup {
                "caching": true,
                "d": [Function],
                "keyMaker": Trie {
                  "makeData": [Function],
                  "weakness": true,
                },
              },
              "policies": Policies {
                "cache": [Circular],
                "config": Object {
                  "cache": [Circular],
                  "dataIdFromObject": [Function],
                  "possibleTypes": undefined,
                  "typePolicies": Object {},
                },
                "fuzzySubtypes": Map {},
                "rootIdsByTypename": Object {
                  "Mutation": "ROOT_MUTATION",
                  "Query": "ROOT_QUERY",
                  "Subscription": "ROOT_SUBSCRIPTION",
                },
                "rootTypenamesById": Object {
                  "ROOT_MUTATION": "Mutation",
                  "ROOT_QUERY": "Query",
                  "ROOT_SUBSCRIPTION": "Subscription",
                },
                "supertypeMap": Map {},
                "toBeAdded": Object {},
                "typePolicies": Object {},
                "usingPossibleTypes": false,
              },
              "refs": Object {},
              "rootIds": Object {},
              "sharedLayerGroup": CacheGroup {
                "caching": true,
                "d": [Function],
                "keyMaker": Trie {
                  "makeData": [Function],
                  "weakness": true,
                },
              },
              "storageTrie": Trie {
                "makeData": [Function],
                "weakness": true,
              },
              "toReference": [Function],
            },
            "getFragmentDoc": [Function],
            "makeVar": [Function],
            "maybeBroadcastWatch": [Function],
            "optimisticData": Root {
              "canRead": [Function],
              "data": Object {},
              "getFieldValue": [Function],
              "group": CacheGroup {
                "caching": true,
                "d": [Function],
                "keyMaker": Trie {
                  "makeData": [Function],
                  "weakness": true,
                },
              },
              "policies": Policies {
                "cache": [Circular],
                "config": Object {
                  "cache": [Circular],
                  "dataIdFromObject": [Function],
                  "possibleTypes": undefined,
                  "typePolicies": Object {},
                },
                "fuzzySubtypes": Map {},
                "rootIdsByTypename": Object {
                  "Mutation": "ROOT_MUTATION",
                  "Query": "ROOT_QUERY",
                  "Subscription": "ROOT_SUBSCRIPTION",
                },
                "rootTypenamesById": Object {
                  "ROOT_MUTATION": "Mutation",
                  "ROOT_QUERY": "Query",
                  "ROOT_SUBSCRIPTION": "Subscription",
                },
                "supertypeMap": Map {},
                "toBeAdded": Object {},
                "typePolicies": Object {},
                "usingPossibleTypes": false,
              },
              "refs": Object {},
              "rootIds": Object {},
              "sharedLayerGroup": CacheGroup {
                "caching": true,
                "d": [Function],
                "keyMaker": Trie {
                  "makeData": [Function],
                  "weakness": true,
                },
              },
              "storageTrie": Trie {
                "makeData": [Function],
                "weakness": true,
              },
              "toReference": [Function],
            },
            "policies": Policies {
              "cache": [Circular],
              "config": Object {
                "cache": [Circular],
                "dataIdFromObject": [Function],
                "possibleTypes": undefined,
                "typePolicies": Object {},
              },
              "fuzzySubtypes": Map {},
              "rootIdsByTypename": Object {
                "Mutation": "ROOT_MUTATION",
                "Query": "ROOT_QUERY",
                "Subscription": "ROOT_SUBSCRIPTION",
              },
              "rootTypenamesById": Object {
                "ROOT_MUTATION": "Mutation",
                "ROOT_QUERY": "Query",
                "ROOT_SUBSCRIPTION": "Subscription",
              },
              "supertypeMap": Map {},
              "toBeAdded": Object {},
              "typePolicies": Object {},
              "usingPossibleTypes": false,
            },
            "storeReader": StoreReader {
              "config": Object {
                "addTypename": true,
                "cache": [Circular],
              },
              "executeSelectionSet": [Function],
              "executeSubSelectedArray": [Function],
              "knownResults": WeakMap {},
            },
            "storeWriter": StoreWriter {
              "cache": [Circular],
              "reader": StoreReader {
                "config": Object {
                  "addTypename": true,
                  "cache": [Circular],
                },
                "executeSelectionSet": [Function],
                "executeSubSelectedArray": [Function],
                "knownResults": WeakMap {},
              },
            },
            "txCount": 0,
            "typenameDocumentCache": Map {},
            "watchDep": [Function],
            "watches": Set {},
          },
          "clearStoreCallbacks": Array [],
          "defaultOptions": Object {},
          "disableNetworkFetches": false,
          "link": MockLink {
            "addTypename": true,
            "mockedResponsesByKey": Object {
              "{\\"query\\":\\"query GetEmployees {\\\\n  people {\\\\n    id\\\\n    name {\\\\n      title\\\\n      first\\\\n      last\\\\n      __typename\\\\n    }\\\\n    email\\\\n    picture {\\\\n      thumbnail\\\\n      medium\\\\n      __typename\\\\n    }\\\\n    phone\\\\n    cell\\\\n    __typename\\\\n  }\\\\n}\\\\n\\"}": Array [
                Object {
                  "request": Object {
                    "query": Object {
                      "definitions": Array [
                        Object {
                          "directives": Array [],
                          "kind": "OperationDefinition",
                          "name": Object {
                            "kind": "Name",
                            "value": "GetEmployees",
                          },
                          "operation": "query",
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "people",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "id",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "name",
                                      },
                                      "selectionSet": Object {
                                        "kind": "SelectionSet",
                                        "selections": Array [
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "title",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "first",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "last",
                                            },
                                            "selectionSet": undefined,
                                          },
                                        ],
                                      },
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "email",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "picture",
                                      },
                                      "selectionSet": Object {
                                        "kind": "SelectionSet",
                                        "selections": Array [
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "thumbnail",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "medium",
                                            },
                                            "selectionSet": undefined,
                                          },
                                        ],
                                      },
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "phone",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "cell",
                                      },
                                      "selectionSet": undefined,
                                    },
                                  ],
                                },
                              },
                            ],
                          },
                          "variableDefinitions": Array [],
                        },
                      ],
                      "kind": "Document",
                      "loc": Object {
                        "end": 212,
                        "start": 0,
                      },
                    },
                  },
                  "result": Object {
                    "data": Object {
                      "people": Array [
                        Object {
                          "__typename": "Person",
                          "cell": "0176-8113486",
                          "email": "Heidelinde3e",
                          "id": "0",
                          "name": Object {
                            "__typename": "Name",
                            "first": "12h23!crazywefwfe",
                            "last": "Heidelinde3e",
                            "title": "Ms",
                          },
                          "phone": "0081-3231613",
                          "picture": Object {
                            "__typename": "Picture",
                            "medium": "https://randomuser.me/api/portraits/med/women/14.jpg",
                            "thumbnail": "https://randomuser.me/api/portraits/thumb/women/14.jpg",
                          },
                        },
                        Object {
                          "__typename": "Person",
                          "cell": "(639)-154-1675",
                          "email": "jill.bradley@example.com",
                          "id": "98",
                          "name": Object {
                            "__typename": "Name",
                            "first": "Jill",
                            "last": "Bradley",
                            "title": "Ms",
                          },
                          "phone": "(914)-769-6131",
                          "picture": Object {
                            "__typename": "Picture",
                            "medium": "https://randomuser.me/api/portraits/med/women/64.jpg",
                            "thumbnail": "https://randomuser.me/api/portraits/thumb/women/64.jpg",
                          },
                        },
                        Object {
                          "__typename": "Person",
                          "cell": "081-599-2437",
                          "email": "eleanor.henry@example.com",
                          "id": "99",
                          "name": Object {
                            "__typename": "Name",
                            "first": "Eleanor",
                            "last": "Henry",
                            "title": "Ms",
                          },
                          "phone": "031-263-1441",
                          "picture": Object {
                            "__typename": "Picture",
                            "medium": "https://randomuser.me/api/portraits/med/women/47.jpg",
                            "thumbnail": "https://randomuser.me/api/portraits/thumb/women/47.jpg",
                          },
                        },
                      ],
                    },
                    "error": null,
                    "loading": false,
                  },
                },
              ],
            },
          },
          "localState": LocalState {
            "cache": InMemoryCache {
              "addTypename": true,
              "config": Object {
                "addTypename": true,
                "dataIdFromObject": [Function],
                "resultCaching": true,
                "typePolicies": Object {},
              },
              "data": Root {
                "canRead": [Function],
                "data": Object {},
                "getFieldValue": [Function],
                "group": CacheGroup {
                  "caching": true,
                  "d": [Function],
                  "keyMaker": Trie {
                    "makeData": [Function],
                    "weakness": true,
                  },
                },
                "policies": Policies {
                  "cache": [Circular],
                  "config": Object {
                    "cache": [Circular],
                    "dataIdFromObject": [Function],
                    "possibleTypes": undefined,
                    "typePolicies": Object {},
                  },
                  "fuzzySubtypes": Map {},
                  "rootIdsByTypename": Object {
                    "Mutation": "ROOT_MUTATION",
                    "Query": "ROOT_QUERY",
                    "Subscription": "ROOT_SUBSCRIPTION",
                  },
                  "rootTypenamesById": Object {
                    "ROOT_MUTATION": "Mutation",
                    "ROOT_QUERY": "Query",
                    "ROOT_SUBSCRIPTION": "Subscription",
                  },
                  "supertypeMap": Map {},
                  "toBeAdded": Object {},
                  "typePolicies": Object {},
                  "usingPossibleTypes": false,
                },
                "refs": Object {},
                "rootIds": Object {},
                "sharedLayerGroup": CacheGroup {
                  "caching": true,
                  "d": [Function],
                  "keyMaker": Trie {
                    "makeData": [Function],
                    "weakness": true,
                  },
                },
                "storageTrie": Trie {
                  "makeData": [Function],
                  "weakness": true,
                },
                "toReference": [Function],
              },
              "getFragmentDoc": [Function],
              "makeVar": [Function],
              "maybeBroadcastWatch": [Function],
              "optimisticData": Root {
                "canRead": [Function],
                "data": Object {},
                "getFieldValue": [Function],
                "group": CacheGroup {
                  "caching": true,
                  "d": [Function],
                  "keyMaker": Trie {
                    "makeData": [Function],
                    "weakness": true,
                  },
                },
                "policies": Policies {
                  "cache": [Circular],
                  "config": Object {
                    "cache": [Circular],
                    "dataIdFromObject": [Function],
                    "possibleTypes": undefined,
                    "typePolicies": Object {},
                  },
                  "fuzzySubtypes": Map {},
                  "rootIdsByTypename": Object {
                    "Mutation": "ROOT_MUTATION",
                    "Query": "ROOT_QUERY",
                    "Subscription": "ROOT_SUBSCRIPTION",
                  },
                  "rootTypenamesById": Object {
                    "ROOT_MUTATION": "Mutation",
                    "ROOT_QUERY": "Query",
                    "ROOT_SUBSCRIPTION": "Subscription",
                  },
                  "supertypeMap": Map {},
                  "toBeAdded": Object {},
                  "typePolicies": Object {},
                  "usingPossibleTypes": false,
                },
                "refs": Object {},
                "rootIds": Object {},
                "sharedLayerGroup": CacheGroup {
                  "caching": true,
                  "d": [Function],
                  "keyMaker": Trie {
                    "makeData": [Function],
                    "weakness": true,
                  },
                },
                "storageTrie": Trie {
                  "makeData": [Function],
                  "weakness": true,
                },
                "toReference": [Function],
              },
              "policies": Policies {
                "cache": [Circular],
                "config": Object {
                  "cache": [Circular],
                  "dataIdFromObject": [Function],
                  "possibleTypes": undefined,
                  "typePolicies": Object {},
                },
                "fuzzySubtypes": Map {},
                "rootIdsByTypename": Object {
                  "Mutation": "ROOT_MUTATION",
                  "Query": "ROOT_QUERY",
                  "Subscription": "ROOT_SUBSCRIPTION",
                },
                "rootTypenamesById": Object {
                  "ROOT_MUTATION": "Mutation",
                  "ROOT_QUERY": "Query",
                  "ROOT_SUBSCRIPTION": "Subscription",
                },
                "supertypeMap": Map {},
                "toBeAdded": Object {},
                "typePolicies": Object {},
                "usingPossibleTypes": false,
              },
              "storeReader": StoreReader {
                "config": Object {
                  "addTypename": true,
                  "cache": [Circular],
                },
                "executeSelectionSet": [Function],
                "executeSubSelectedArray": [Function],
                "knownResults": WeakMap {},
              },
              "storeWriter": StoreWriter {
                "cache": [Circular],
                "reader": StoreReader {
                  "config": Object {
                    "addTypename": true,
                    "cache": [Circular],
                  },
                  "executeSelectionSet": [Function],
                  "executeSubSelectedArray": [Function],
                  "knownResults": WeakMap {},
                },
              },
              "txCount": 0,
              "typenameDocumentCache": Map {},
              "watchDep": [Function],
              "watches": Set {},
            },
            "client": [Circular],
          },
          "mutate": [Function],
          "query": [Function],
          "queryDeduplication": true,
          "queryManager": QueryManager {
            "assumeImmutableResults": false,
            "cache": InMemoryCache {
              "addTypename": true,
              "config": Object {
                "addTypename": true,
                "dataIdFromObject": [Function],
                "resultCaching": true,
                "typePolicies": Object {},
              },
              "data": Root {
                "canRead": [Function],
                "data": Object {},
                "getFieldValue": [Function],
                "group": CacheGroup {
                  "caching": true,
                  "d": [Function],
                  "keyMaker": Trie {
                    "makeData": [Function],
                    "weakness": true,
                  },
                },
                "policies": Policies {
                  "cache": [Circular],
                  "config": Object {
                    "cache": [Circular],
                    "dataIdFromObject": [Function],
                    "possibleTypes": undefined,
                    "typePolicies": Object {},
                  },
                  "fuzzySubtypes": Map {},
                  "rootIdsByTypename": Object {
                    "Mutation": "ROOT_MUTATION",
                    "Query": "ROOT_QUERY",
                    "Subscription": "ROOT_SUBSCRIPTION",
                  },
                  "rootTypenamesById": Object {
                    "ROOT_MUTATION": "Mutation",
                    "ROOT_QUERY": "Query",
                    "ROOT_SUBSCRIPTION": "Subscription",
                  },
                  "supertypeMap": Map {},
                  "toBeAdded": Object {},
                  "typePolicies": Object {},
                  "usingPossibleTypes": false,
                },
                "refs": Object {},
                "rootIds": Object {},
                "sharedLayerGroup": CacheGroup {
                  "caching": true,
                  "d": [Function],
                  "keyMaker": Trie {
                    "makeData": [Function],
                    "weakness": true,
                  },
                },
                "storageTrie": Trie {
                  "makeData": [Function],
                  "weakness": true,
                },
                "toReference": [Function],
              },
              "getFragmentDoc": [Function],
              "makeVar": [Function],
              "maybeBroadcastWatch": [Function],
              "optimisticData": Root {
                "canRead": [Function],
                "data": Object {},
                "getFieldValue": [Function],
                "group": CacheGroup {
                  "caching": true,
                  "d": [Function],
                  "keyMaker": Trie {
                    "makeData": [Function],
                    "weakness": true,
                  },
                },
                "policies": Policies {
                  "cache": [Circular],
                  "config": Object {
                    "cache": [Circular],
                    "dataIdFromObject": [Function],
                    "possibleTypes": undefined,
                    "typePolicies": Object {},
                  },
                  "fuzzySubtypes": Map {},
                  "rootIdsByTypename": Object {
                    "Mutation": "ROOT_MUTATION",
                    "Query": "ROOT_QUERY",
                    "Subscription": "ROOT_SUBSCRIPTION",
                  },
                  "rootTypenamesById": Object {
                    "ROOT_MUTATION": "Mutation",
                    "ROOT_QUERY": "Query",
                    "ROOT_SUBSCRIPTION": "Subscription",
                  },
                  "supertypeMap": Map {},
                  "toBeAdded": Object {},
                  "typePolicies": Object {},
                  "usingPossibleTypes": false,
                },
                "refs": Object {},
                "rootIds": Object {},
                "sharedLayerGroup": CacheGroup {
                  "caching": true,
                  "d": [Function],
                  "keyMaker": Trie {
                    "makeData": [Function],
                    "weakness": true,
                  },
                },
                "storageTrie": Trie {
                  "makeData": [Function],
                  "weakness": true,
                },
                "toReference": [Function],
              },
              "policies": Policies {
                "cache": [Circular],
                "config": Object {
                  "cache": [Circular],
                  "dataIdFromObject": [Function],
                  "possibleTypes": undefined,
                  "typePolicies": Object {},
                },
                "fuzzySubtypes": Map {},
                "rootIdsByTypename": Object {
                  "Mutation": "ROOT_MUTATION",
                  "Query": "ROOT_QUERY",
                  "Subscription": "ROOT_SUBSCRIPTION",
                },
                "rootTypenamesById": Object {
                  "ROOT_MUTATION": "Mutation",
                  "ROOT_QUERY": "Query",
                  "ROOT_SUBSCRIPTION": "Subscription",
                },
                "supertypeMap": Map {},
                "toBeAdded": Object {},
                "typePolicies": Object {},
                "usingPossibleTypes": false,
              },
              "storeReader": StoreReader {
                "config": Object {
                  "addTypename": true,
                  "cache": [Circular],
                },
                "executeSelectionSet": [Function],
                "executeSubSelectedArray": [Function],
                "knownResults": WeakMap {},
              },
              "storeWriter": StoreWriter {
                "cache": [Circular],
                "reader": StoreReader {
                  "config": Object {
                    "addTypename": true,
                    "cache": [Circular],
                  },
                  "executeSelectionSet": [Function],
                  "executeSubSelectedArray": [Function],
                  "knownResults": WeakMap {},
                },
              },
              "txCount": 0,
              "typenameDocumentCache": Map {},
              "watchDep": [Function],
              "watches": Set {},
            },
            "clientAwareness": Object {
              "name": undefined,
              "version": undefined,
            },
            "fetchCancelFns": Map {},
            "inFlightLinkObservables": Map {},
            "link": MockLink {
              "addTypename": true,
              "mockedResponsesByKey": Object {
                "{\\"query\\":\\"query GetEmployees {\\\\n  people {\\\\n    id\\\\n    name {\\\\n      title\\\\n      first\\\\n      last\\\\n      __typename\\\\n    }\\\\n    email\\\\n    picture {\\\\n      thumbnail\\\\n      medium\\\\n      __typename\\\\n    }\\\\n    phone\\\\n    cell\\\\n    __typename\\\\n  }\\\\n}\\\\n\\"}": Array [
                  Object {
                    "request": Object {
                      "query": Object {
                        "definitions": Array [
                          Object {
                            "directives": Array [],
                            "kind": "OperationDefinition",
                            "name": Object {
                              "kind": "Name",
                              "value": "GetEmployees",
                            },
                            "operation": "query",
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "people",
                                  },
                                  "selectionSet": Object {
                                    "kind": "SelectionSet",
                                    "selections": Array [
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "id",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "name",
                                        },
                                        "selectionSet": Object {
                                          "kind": "SelectionSet",
                                          "selections": Array [
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "title",
                                              },
                                              "selectionSet": undefined,
                                            },
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "first",
                                              },
                                              "selectionSet": undefined,
                                            },
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "last",
                                              },
                                              "selectionSet": undefined,
                                            },
                                          ],
                                        },
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "email",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "picture",
                                        },
                                        "selectionSet": Object {
                                          "kind": "SelectionSet",
                                          "selections": Array [
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "thumbnail",
                                              },
                                              "selectionSet": undefined,
                                            },
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "medium",
                                              },
                                              "selectionSet": undefined,
                                            },
                                          ],
                                        },
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "phone",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "cell",
                                        },
                                        "selectionSet": undefined,
                                      },
                                    ],
                                  },
                                },
                              ],
                            },
                            "variableDefinitions": Array [],
                          },
                        ],
                        "kind": "Document",
                        "loc": Object {
                          "end": 212,
                          "start": 0,
                        },
                      },
                    },
                    "result": Object {
                      "data": Object {
                        "people": Array [
                          Object {
                            "__typename": "Person",
                            "cell": "0176-8113486",
                            "email": "Heidelinde3e",
                            "id": "0",
                            "name": Object {
                              "__typename": "Name",
                              "first": "12h23!crazywefwfe",
                              "last": "Heidelinde3e",
                              "title": "Ms",
                            },
                            "phone": "0081-3231613",
                            "picture": Object {
                              "__typename": "Picture",
                              "medium": "https://randomuser.me/api/portraits/med/women/14.jpg",
                              "thumbnail": "https://randomuser.me/api/portraits/thumb/women/14.jpg",
                            },
                          },
                          Object {
                            "__typename": "Person",
                            "cell": "(639)-154-1675",
                            "email": "jill.bradley@example.com",
                            "id": "98",
                            "name": Object {
                              "__typename": "Name",
                              "first": "Jill",
                              "last": "Bradley",
                              "title": "Ms",
                            },
                            "phone": "(914)-769-6131",
                            "picture": Object {
                              "__typename": "Picture",
                              "medium": "https://randomuser.me/api/portraits/med/women/64.jpg",
                              "thumbnail": "https://randomuser.me/api/portraits/thumb/women/64.jpg",
                            },
                          },
                          Object {
                            "__typename": "Person",
                            "cell": "081-599-2437",
                            "email": "eleanor.henry@example.com",
                            "id": "99",
                            "name": Object {
                              "__typename": "Name",
                              "first": "Eleanor",
                              "last": "Henry",
                              "title": "Ms",
                            },
                            "phone": "031-263-1441",
                            "picture": Object {
                              "__typename": "Picture",
                              "medium": "https://randomuser.me/api/portraits/med/women/47.jpg",
                              "thumbnail": "https://randomuser.me/api/portraits/thumb/women/47.jpg",
                            },
                          },
                        ],
                      },
                      "error": null,
                      "loading": false,
                    },
                  },
                ],
              },
            },
            "localState": LocalState {
              "cache": InMemoryCache {
                "addTypename": true,
                "config": Object {
                  "addTypename": true,
                  "dataIdFromObject": [Function],
                  "resultCaching": true,
                  "typePolicies": Object {},
                },
                "data": Root {
                  "canRead": [Function],
                  "data": Object {},
                  "getFieldValue": [Function],
                  "group": CacheGroup {
                    "caching": true,
                    "d": [Function],
                    "keyMaker": Trie {
                      "makeData": [Function],
                      "weakness": true,
                    },
                  },
                  "policies": Policies {
                    "cache": [Circular],
                    "config": Object {
                      "cache": [Circular],
                      "dataIdFromObject": [Function],
                      "possibleTypes": undefined,
                      "typePolicies": Object {},
                    },
                    "fuzzySubtypes": Map {},
                    "rootIdsByTypename": Object {
                      "Mutation": "ROOT_MUTATION",
                      "Query": "ROOT_QUERY",
                      "Subscription": "ROOT_SUBSCRIPTION",
                    },
                    "rootTypenamesById": Object {
                      "ROOT_MUTATION": "Mutation",
                      "ROOT_QUERY": "Query",
                      "ROOT_SUBSCRIPTION": "Subscription",
                    },
                    "supertypeMap": Map {},
                    "toBeAdded": Object {},
                    "typePolicies": Object {},
                    "usingPossibleTypes": false,
                  },
                  "refs": Object {},
                  "rootIds": Object {},
                  "sharedLayerGroup": CacheGroup {
                    "caching": true,
                    "d": [Function],
                    "keyMaker": Trie {
                      "makeData": [Function],
                      "weakness": true,
                    },
                  },
                  "storageTrie": Trie {
                    "makeData": [Function],
                    "weakness": true,
                  },
                  "toReference": [Function],
                },
                "getFragmentDoc": [Function],
                "makeVar": [Function],
                "maybeBroadcastWatch": [Function],
                "optimisticData": Root {
                  "canRead": [Function],
                  "data": Object {},
                  "getFieldValue": [Function],
                  "group": CacheGroup {
                    "caching": true,
                    "d": [Function],
                    "keyMaker": Trie {
                      "makeData": [Function],
                      "weakness": true,
                    },
                  },
                  "policies": Policies {
                    "cache": [Circular],
                    "config": Object {
                      "cache": [Circular],
                      "dataIdFromObject": [Function],
                      "possibleTypes": undefined,
                      "typePolicies": Object {},
                    },
                    "fuzzySubtypes": Map {},
                    "rootIdsByTypename": Object {
                      "Mutation": "ROOT_MUTATION",
                      "Query": "ROOT_QUERY",
                      "Subscription": "ROOT_SUBSCRIPTION",
                    },
                    "rootTypenamesById": Object {
                      "ROOT_MUTATION": "Mutation",
                      "ROOT_QUERY": "Query",
                      "ROOT_SUBSCRIPTION": "Subscription",
                    },
                    "supertypeMap": Map {},
                    "toBeAdded": Object {},
                    "typePolicies": Object {},
                    "usingPossibleTypes": false,
                  },
                  "refs": Object {},
                  "rootIds": Object {},
                  "sharedLayerGroup": CacheGroup {
                    "caching": true,
                    "d": [Function],
                    "keyMaker": Trie {
                      "makeData": [Function],
                      "weakness": true,
                    },
                  },
                  "storageTrie": Trie {
                    "makeData": [Function],
                    "weakness": true,
                  },
                  "toReference": [Function],
                },
                "policies": Policies {
                  "cache": [Circular],
                  "config": Object {
                    "cache": [Circular],
                    "dataIdFromObject": [Function],
                    "possibleTypes": undefined,
                    "typePolicies": Object {},
                  },
                  "fuzzySubtypes": Map {},
                  "rootIdsByTypename": Object {
                    "Mutation": "ROOT_MUTATION",
                    "Query": "ROOT_QUERY",
                    "Subscription": "ROOT_SUBSCRIPTION",
                  },
                  "rootTypenamesById": Object {
                    "ROOT_MUTATION": "Mutation",
                    "ROOT_QUERY": "Query",
                    "ROOT_SUBSCRIPTION": "Subscription",
                  },
                  "supertypeMap": Map {},
                  "toBeAdded": Object {},
                  "typePolicies": Object {},
                  "usingPossibleTypes": false,
                },
                "storeReader": StoreReader {
                  "config": Object {
                    "addTypename": true,
                    "cache": [Circular],
                  },
                  "executeSelectionSet": [Function],
                  "executeSubSelectedArray": [Function],
                  "knownResults": WeakMap {},
                },
                "storeWriter": StoreWriter {
                  "cache": [Circular],
                  "reader": StoreReader {
                    "config": Object {
                      "addTypename": true,
                      "cache": [Circular],
                    },
                    "executeSelectionSet": [Function],
                    "executeSubSelectedArray": [Function],
                    "knownResults": WeakMap {},
                  },
                },
                "txCount": 0,
                "typenameDocumentCache": Map {},
                "watchDep": [Function],
                "watches": Set {},
              },
              "client": [Circular],
            },
            "mutationIdCounter": 1,
            "mutationStore": Object {},
            "onBroadcast": [Function],
            "queries": Map {},
            "queryDeduplication": true,
            "queryIdCounter": 1,
            "requestIdCounter": 1,
            "ssrMode": false,
            "transformCache": WeakMap {},
          },
          "reFetchObservableQueries": [Function],
          "resetStore": [Function],
          "resetStoreCallbacks": Array [],
          "typeDefs": undefined,
          "version": "3.3.21",
          "watchQuery": [Function],
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
